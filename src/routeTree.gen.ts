/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ThreadRouteImport } from './routes/_thread'
import { Route as TeamRouteImport } from './routes/_team'
import { Route as AccountRouteImport } from './routes/_account'
import { Route as ThreadIndexRouteImport } from './routes/_thread.index'
import { Route as ThreadThreadIdRouteImport } from './routes/_thread.$threadId'
import { Route as AccountMagicLinkRouteImport } from './routes/_account.magic-link'
import { Route as AccountLoggedOutRouteImport } from './routes/_account.logged-out'
import { Route as AccountAccountRouteImport } from './routes/_account.account'
import { Route as AccountLoginIndexRouteImport } from './routes/_account.login.index'
import { Route as AccountAccountIndexRouteImport } from './routes/_account.account.index'
import { Route as TeamTeamCreateRouteImport } from './routes/_team.team.create'
import { Route as AccountAccountPreferencesRouteImport } from './routes/_account.account.preferences'
import { Route as AccountAccountAppearanceRouteImport } from './routes/_account.account.appearance'
import { ServerRoute as ApiUploadthingServerRouteImport } from './routes/api.uploadthing'
import { ServerRoute as ApiThreadServerRouteImport } from './routes/api.thread'
import { ServerRoute as ApiCheckoutServerRouteImport } from './routes/api.checkout'
import { ServerRoute as ApiWebhookStripeServerRouteImport } from './routes/api.webhook.stripe'
import { ServerRoute as ApiCheckoutSuccessServerRouteImport } from './routes/api.checkout.success'
import { ServerRoute as ApiCheckoutOrganizationServerRouteImport } from './routes/api.checkout.organization'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'
import { ServerRoute as ApiThreadThreadIdStreamServerRouteImport } from './routes/api.thread.$threadId.stream'

const rootServerRouteImport = createServerRootRoute()

const ThreadRoute = ThreadRouteImport.update({
  id: '/_thread',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamRoute = TeamRouteImport.update({
  id: '/_team',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/_account',
  getParentRoute: () => rootRouteImport,
} as any)
const ThreadIndexRoute = ThreadIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ThreadRoute,
} as any)
const ThreadThreadIdRoute = ThreadThreadIdRouteImport.update({
  id: '/$threadId',
  path: '/$threadId',
  getParentRoute: () => ThreadRoute,
} as any)
const AccountMagicLinkRoute = AccountMagicLinkRouteImport.update({
  id: '/magic-link',
  path: '/magic-link',
  getParentRoute: () => AccountRoute,
} as any)
const AccountLoggedOutRoute = AccountLoggedOutRouteImport.update({
  id: '/logged-out',
  path: '/logged-out',
  getParentRoute: () => AccountRoute,
} as any)
const AccountAccountRoute = AccountAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AccountRoute,
} as any)
const AccountLoginIndexRoute = AccountLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AccountRoute,
} as any)
const AccountAccountIndexRoute = AccountAccountIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountAccountRoute,
} as any)
const TeamTeamCreateRoute = TeamTeamCreateRouteImport.update({
  id: '/team/create',
  path: '/team/create',
  getParentRoute: () => TeamRoute,
} as any)
const AccountAccountPreferencesRoute =
  AccountAccountPreferencesRouteImport.update({
    id: '/preferences',
    path: '/preferences',
    getParentRoute: () => AccountAccountRoute,
  } as any)
const AccountAccountAppearanceRoute =
  AccountAccountAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AccountAccountRoute,
  } as any)
const ApiUploadthingServerRoute = ApiUploadthingServerRouteImport.update({
  id: '/api/uploadthing',
  path: '/api/uploadthing',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiThreadServerRoute = ApiThreadServerRouteImport.update({
  id: '/api/thread',
  path: '/api/thread',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiCheckoutServerRoute = ApiCheckoutServerRouteImport.update({
  id: '/api/checkout',
  path: '/api/checkout',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiWebhookStripeServerRoute = ApiWebhookStripeServerRouteImport.update({
  id: '/api/webhook/stripe',
  path: '/api/webhook/stripe',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiCheckoutSuccessServerRoute =
  ApiCheckoutSuccessServerRouteImport.update({
    id: '/success',
    path: '/success',
    getParentRoute: () => ApiCheckoutServerRoute,
  } as any)
const ApiCheckoutOrganizationServerRoute =
  ApiCheckoutOrganizationServerRouteImport.update({
    id: '/organization',
    path: '/organization',
    getParentRoute: () => ApiCheckoutServerRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiThreadThreadIdStreamServerRoute =
  ApiThreadThreadIdStreamServerRouteImport.update({
    id: '/$threadId/stream',
    path: '/$threadId/stream',
    getParentRoute: () => ApiThreadServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/account': typeof AccountAccountRouteWithChildren
  '/logged-out': typeof AccountLoggedOutRoute
  '/magic-link': typeof AccountMagicLinkRoute
  '/$threadId': typeof ThreadThreadIdRoute
  '/': typeof ThreadIndexRoute
  '/account/appearance': typeof AccountAccountAppearanceRoute
  '/account/preferences': typeof AccountAccountPreferencesRoute
  '/team/create': typeof TeamTeamCreateRoute
  '/account/': typeof AccountAccountIndexRoute
  '/login': typeof AccountLoginIndexRoute
}
export interface FileRoutesByTo {
  '/logged-out': typeof AccountLoggedOutRoute
  '/magic-link': typeof AccountMagicLinkRoute
  '/$threadId': typeof ThreadThreadIdRoute
  '/': typeof ThreadIndexRoute
  '/account/appearance': typeof AccountAccountAppearanceRoute
  '/account/preferences': typeof AccountAccountPreferencesRoute
  '/team/create': typeof TeamTeamCreateRoute
  '/account': typeof AccountAccountIndexRoute
  '/login': typeof AccountLoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_account': typeof AccountRouteWithChildren
  '/_team': typeof TeamRouteWithChildren
  '/_thread': typeof ThreadRouteWithChildren
  '/_account/account': typeof AccountAccountRouteWithChildren
  '/_account/logged-out': typeof AccountLoggedOutRoute
  '/_account/magic-link': typeof AccountMagicLinkRoute
  '/_thread/$threadId': typeof ThreadThreadIdRoute
  '/_thread/': typeof ThreadIndexRoute
  '/_account/account/appearance': typeof AccountAccountAppearanceRoute
  '/_account/account/preferences': typeof AccountAccountPreferencesRoute
  '/_team/team/create': typeof TeamTeamCreateRoute
  '/_account/account/': typeof AccountAccountIndexRoute
  '/_account/login/': typeof AccountLoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/account'
    | '/logged-out'
    | '/magic-link'
    | '/$threadId'
    | '/'
    | '/account/appearance'
    | '/account/preferences'
    | '/team/create'
    | '/account/'
    | '/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/logged-out'
    | '/magic-link'
    | '/$threadId'
    | '/'
    | '/account/appearance'
    | '/account/preferences'
    | '/team/create'
    | '/account'
    | '/login'
  id:
    | '__root__'
    | '/_account'
    | '/_team'
    | '/_thread'
    | '/_account/account'
    | '/_account/logged-out'
    | '/_account/magic-link'
    | '/_thread/$threadId'
    | '/_thread/'
    | '/_account/account/appearance'
    | '/_account/account/preferences'
    | '/_team/team/create'
    | '/_account/account/'
    | '/_account/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AccountRoute: typeof AccountRouteWithChildren
  TeamRoute: typeof TeamRouteWithChildren
  ThreadRoute: typeof ThreadRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/checkout': typeof ApiCheckoutServerRouteWithChildren
  '/api/thread': typeof ApiThreadServerRouteWithChildren
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/checkout/organization': typeof ApiCheckoutOrganizationServerRoute
  '/api/checkout/success': typeof ApiCheckoutSuccessServerRoute
  '/api/webhook/stripe': typeof ApiWebhookStripeServerRoute
  '/api/thread/$threadId/stream': typeof ApiThreadThreadIdStreamServerRoute
}
export interface FileServerRoutesByTo {
  '/api/checkout': typeof ApiCheckoutServerRouteWithChildren
  '/api/thread': typeof ApiThreadServerRouteWithChildren
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/checkout/organization': typeof ApiCheckoutOrganizationServerRoute
  '/api/checkout/success': typeof ApiCheckoutSuccessServerRoute
  '/api/webhook/stripe': typeof ApiWebhookStripeServerRoute
  '/api/thread/$threadId/stream': typeof ApiThreadThreadIdStreamServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/checkout': typeof ApiCheckoutServerRouteWithChildren
  '/api/thread': typeof ApiThreadServerRouteWithChildren
  '/api/uploadthing': typeof ApiUploadthingServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/checkout/organization': typeof ApiCheckoutOrganizationServerRoute
  '/api/checkout/success': typeof ApiCheckoutSuccessServerRoute
  '/api/webhook/stripe': typeof ApiWebhookStripeServerRoute
  '/api/thread/$threadId/stream': typeof ApiThreadThreadIdStreamServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/checkout'
    | '/api/thread'
    | '/api/uploadthing'
    | '/api/auth/$'
    | '/api/checkout/organization'
    | '/api/checkout/success'
    | '/api/webhook/stripe'
    | '/api/thread/$threadId/stream'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/checkout'
    | '/api/thread'
    | '/api/uploadthing'
    | '/api/auth/$'
    | '/api/checkout/organization'
    | '/api/checkout/success'
    | '/api/webhook/stripe'
    | '/api/thread/$threadId/stream'
  id:
    | '__root__'
    | '/api/checkout'
    | '/api/thread'
    | '/api/uploadthing'
    | '/api/auth/$'
    | '/api/checkout/organization'
    | '/api/checkout/success'
    | '/api/webhook/stripe'
    | '/api/thread/$threadId/stream'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiCheckoutServerRoute: typeof ApiCheckoutServerRouteWithChildren
  ApiThreadServerRoute: typeof ApiThreadServerRouteWithChildren
  ApiUploadthingServerRoute: typeof ApiUploadthingServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiWebhookStripeServerRoute: typeof ApiWebhookStripeServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_thread': {
      id: '/_thread'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ThreadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_team': {
      id: '/_team'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof TeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_account': {
      id: '/_account'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_thread/': {
      id: '/_thread/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ThreadIndexRouteImport
      parentRoute: typeof ThreadRoute
    }
    '/_thread/$threadId': {
      id: '/_thread/$threadId'
      path: '/$threadId'
      fullPath: '/$threadId'
      preLoaderRoute: typeof ThreadThreadIdRouteImport
      parentRoute: typeof ThreadRoute
    }
    '/_account/magic-link': {
      id: '/_account/magic-link'
      path: '/magic-link'
      fullPath: '/magic-link'
      preLoaderRoute: typeof AccountMagicLinkRouteImport
      parentRoute: typeof AccountRoute
    }
    '/_account/logged-out': {
      id: '/_account/logged-out'
      path: '/logged-out'
      fullPath: '/logged-out'
      preLoaderRoute: typeof AccountLoggedOutRouteImport
      parentRoute: typeof AccountRoute
    }
    '/_account/account': {
      id: '/_account/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountAccountRouteImport
      parentRoute: typeof AccountRoute
    }
    '/_account/login/': {
      id: '/_account/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AccountLoginIndexRouteImport
      parentRoute: typeof AccountRoute
    }
    '/_account/account/': {
      id: '/_account/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountAccountIndexRouteImport
      parentRoute: typeof AccountAccountRoute
    }
    '/_team/team/create': {
      id: '/_team/team/create'
      path: '/team/create'
      fullPath: '/team/create'
      preLoaderRoute: typeof TeamTeamCreateRouteImport
      parentRoute: typeof TeamRoute
    }
    '/_account/account/preferences': {
      id: '/_account/account/preferences'
      path: '/preferences'
      fullPath: '/account/preferences'
      preLoaderRoute: typeof AccountAccountPreferencesRouteImport
      parentRoute: typeof AccountAccountRoute
    }
    '/_account/account/appearance': {
      id: '/_account/account/appearance'
      path: '/appearance'
      fullPath: '/account/appearance'
      preLoaderRoute: typeof AccountAccountAppearanceRouteImport
      parentRoute: typeof AccountAccountRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/uploadthing': {
      id: '/api/uploadthing'
      path: '/api/uploadthing'
      fullPath: '/api/uploadthing'
      preLoaderRoute: typeof ApiUploadthingServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/thread': {
      id: '/api/thread'
      path: '/api/thread'
      fullPath: '/api/thread'
      preLoaderRoute: typeof ApiThreadServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/checkout': {
      id: '/api/checkout'
      path: '/api/checkout'
      fullPath: '/api/checkout'
      preLoaderRoute: typeof ApiCheckoutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/webhook/stripe': {
      id: '/api/webhook/stripe'
      path: '/api/webhook/stripe'
      fullPath: '/api/webhook/stripe'
      preLoaderRoute: typeof ApiWebhookStripeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/checkout/success': {
      id: '/api/checkout/success'
      path: '/success'
      fullPath: '/api/checkout/success'
      preLoaderRoute: typeof ApiCheckoutSuccessServerRouteImport
      parentRoute: typeof ApiCheckoutServerRoute
    }
    '/api/checkout/organization': {
      id: '/api/checkout/organization'
      path: '/organization'
      fullPath: '/api/checkout/organization'
      preLoaderRoute: typeof ApiCheckoutOrganizationServerRouteImport
      parentRoute: typeof ApiCheckoutServerRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/thread/$threadId/stream': {
      id: '/api/thread/$threadId/stream'
      path: '/$threadId/stream'
      fullPath: '/api/thread/$threadId/stream'
      preLoaderRoute: typeof ApiThreadThreadIdStreamServerRouteImport
      parentRoute: typeof ApiThreadServerRoute
    }
  }
}

interface AccountAccountRouteChildren {
  AccountAccountAppearanceRoute: typeof AccountAccountAppearanceRoute
  AccountAccountPreferencesRoute: typeof AccountAccountPreferencesRoute
  AccountAccountIndexRoute: typeof AccountAccountIndexRoute
}

const AccountAccountRouteChildren: AccountAccountRouteChildren = {
  AccountAccountAppearanceRoute: AccountAccountAppearanceRoute,
  AccountAccountPreferencesRoute: AccountAccountPreferencesRoute,
  AccountAccountIndexRoute: AccountAccountIndexRoute,
}

const AccountAccountRouteWithChildren = AccountAccountRoute._addFileChildren(
  AccountAccountRouteChildren,
)

interface AccountRouteChildren {
  AccountAccountRoute: typeof AccountAccountRouteWithChildren
  AccountLoggedOutRoute: typeof AccountLoggedOutRoute
  AccountMagicLinkRoute: typeof AccountMagicLinkRoute
  AccountLoginIndexRoute: typeof AccountLoginIndexRoute
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountAccountRoute: AccountAccountRouteWithChildren,
  AccountLoggedOutRoute: AccountLoggedOutRoute,
  AccountMagicLinkRoute: AccountMagicLinkRoute,
  AccountLoginIndexRoute: AccountLoginIndexRoute,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

interface TeamRouteChildren {
  TeamTeamCreateRoute: typeof TeamTeamCreateRoute
}

const TeamRouteChildren: TeamRouteChildren = {
  TeamTeamCreateRoute: TeamTeamCreateRoute,
}

const TeamRouteWithChildren = TeamRoute._addFileChildren(TeamRouteChildren)

interface ThreadRouteChildren {
  ThreadThreadIdRoute: typeof ThreadThreadIdRoute
  ThreadIndexRoute: typeof ThreadIndexRoute
}

const ThreadRouteChildren: ThreadRouteChildren = {
  ThreadThreadIdRoute: ThreadThreadIdRoute,
  ThreadIndexRoute: ThreadIndexRoute,
}

const ThreadRouteWithChildren =
  ThreadRoute._addFileChildren(ThreadRouteChildren)

interface ApiCheckoutServerRouteChildren {
  ApiCheckoutOrganizationServerRoute: typeof ApiCheckoutOrganizationServerRoute
  ApiCheckoutSuccessServerRoute: typeof ApiCheckoutSuccessServerRoute
}

const ApiCheckoutServerRouteChildren: ApiCheckoutServerRouteChildren = {
  ApiCheckoutOrganizationServerRoute: ApiCheckoutOrganizationServerRoute,
  ApiCheckoutSuccessServerRoute: ApiCheckoutSuccessServerRoute,
}

const ApiCheckoutServerRouteWithChildren =
  ApiCheckoutServerRoute._addFileChildren(ApiCheckoutServerRouteChildren)

interface ApiThreadServerRouteChildren {
  ApiThreadThreadIdStreamServerRoute: typeof ApiThreadThreadIdStreamServerRoute
}

const ApiThreadServerRouteChildren: ApiThreadServerRouteChildren = {
  ApiThreadThreadIdStreamServerRoute: ApiThreadThreadIdStreamServerRoute,
}

const ApiThreadServerRouteWithChildren = ApiThreadServerRoute._addFileChildren(
  ApiThreadServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AccountRoute: AccountRouteWithChildren,
  TeamRoute: TeamRouteWithChildren,
  ThreadRoute: ThreadRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiCheckoutServerRoute: ApiCheckoutServerRouteWithChildren,
  ApiThreadServerRoute: ApiThreadServerRouteWithChildren,
  ApiUploadthingServerRoute: ApiUploadthingServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiWebhookStripeServerRoute: ApiWebhookStripeServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
