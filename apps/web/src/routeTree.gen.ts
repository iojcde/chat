/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ThreadRouteImport } from './routes/_thread'
import { Route as ThreadIndexRouteImport } from './routes/_thread.index'
import { Route as ThreadThreadIdRouteImport } from './routes/_thread.$threadId'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api.chat'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api.auth.$'
import { ServerRoute as ApiChatThreadIdStreamServerRouteImport } from './routes/api.chat.$threadId.stream'

const rootServerRouteImport = createServerRootRoute()

const ThreadRoute = ThreadRouteImport.update({
  id: '/_thread',
  getParentRoute: () => rootRouteImport,
} as any)
const ThreadIndexRoute = ThreadIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ThreadRoute,
} as any)
const ThreadThreadIdRoute = ThreadThreadIdRouteImport.update({
  id: '/$threadId',
  path: '/$threadId',
  getParentRoute: () => ThreadRoute,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChatThreadIdStreamServerRoute =
  ApiChatThreadIdStreamServerRouteImport.update({
    id: '/$threadId/stream',
    path: '/$threadId/stream',
    getParentRoute: () => ApiChatServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$threadId': typeof ThreadThreadIdRoute
  '/': typeof ThreadIndexRoute
}
export interface FileRoutesByTo {
  '/$threadId': typeof ThreadThreadIdRoute
  '/': typeof ThreadIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_thread': typeof ThreadRouteWithChildren
  '/_thread/$threadId': typeof ThreadThreadIdRoute
  '/_thread/': typeof ThreadIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$threadId' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$threadId' | '/'
  id: '__root__' | '/_thread' | '/_thread/$threadId' | '/_thread/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ThreadRoute: typeof ThreadRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/chat': typeof ApiChatServerRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/chat/$threadId/stream': typeof ApiChatThreadIdStreamServerRoute
}
export interface FileServerRoutesByTo {
  '/api/chat': typeof ApiChatServerRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/chat/$threadId/stream': typeof ApiChatThreadIdStreamServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/chat': typeof ApiChatServerRouteWithChildren
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/chat/$threadId/stream': typeof ApiChatThreadIdStreamServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/chat' | '/api/auth/$' | '/api/chat/$threadId/stream'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/chat' | '/api/auth/$' | '/api/chat/$threadId/stream'
  id: '__root__' | '/api/chat' | '/api/auth/$' | '/api/chat/$threadId/stream'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChatServerRoute: typeof ApiChatServerRouteWithChildren
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_thread': {
      id: '/_thread'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ThreadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_thread/': {
      id: '/_thread/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ThreadIndexRouteImport
      parentRoute: typeof ThreadRoute
    }
    '/_thread/$threadId': {
      id: '/_thread/$threadId'
      path: '/$threadId'
      fullPath: '/$threadId'
      preLoaderRoute: typeof ThreadThreadIdRouteImport
      parentRoute: typeof ThreadRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chat/$threadId/stream': {
      id: '/api/chat/$threadId/stream'
      path: '/$threadId/stream'
      fullPath: '/api/chat/$threadId/stream'
      preLoaderRoute: typeof ApiChatThreadIdStreamServerRouteImport
      parentRoute: typeof ApiChatServerRoute
    }
  }
}

interface ThreadRouteChildren {
  ThreadThreadIdRoute: typeof ThreadThreadIdRoute
  ThreadIndexRoute: typeof ThreadIndexRoute
}

const ThreadRouteChildren: ThreadRouteChildren = {
  ThreadThreadIdRoute: ThreadThreadIdRoute,
  ThreadIndexRoute: ThreadIndexRoute,
}

const ThreadRouteWithChildren =
  ThreadRoute._addFileChildren(ThreadRouteChildren)

interface ApiChatServerRouteChildren {
  ApiChatThreadIdStreamServerRoute: typeof ApiChatThreadIdStreamServerRoute
}

const ApiChatServerRouteChildren: ApiChatServerRouteChildren = {
  ApiChatThreadIdStreamServerRoute: ApiChatThreadIdStreamServerRoute,
}

const ApiChatServerRouteWithChildren = ApiChatServerRoute._addFileChildren(
  ApiChatServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ThreadRoute: ThreadRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChatServerRoute: ApiChatServerRouteWithChildren,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
